<!-- You successfully used ejs-mate by calling in layout one thing to note that is weird about this layout call it starts scanning from the views directory to find the layouts/boilerplate not from this directory in which this file is present so you don't need to do ../layouts/boilerplate here. -->
<% layout('layouts/boilerplate') %>
<!-- Even though stylesheets should normally be in head but we're putting them here cause this is the only page which needs this and also if you look in the path we did not do ../public/stylesheets/stars.css cause public directory is accessable from everywhere. -->
<link rel="stylesheet" href="/stylesheets/stars.css" />
<div class="row">
  <div class="col-12 col-md-6">
    <div id="campgroundCarousel" class="carousel slide" data-ride="carousel">
      <div class="carousel-inner">
        <% for( let i = 0; i < campground.images.length; i++ ) { %>
        <div class="carousel-item <%= i === 0 ? 'active' : '' %>">
          <img
          crossorigin="anonymous"
            class="d-block w-100"
            src="<%= campground.images[i].url %>"
            alt=""
          />
        </div>
        <% } %>
      </div>
      <% if(campground.images.length > 1) {%>
      <!-- This if condition above is for the case where we have only one image on our campground in that case we would like to hide the next image and prev image buttons. -->
      <button
        class="carousel-control-prev"
        type="button"
        data-bs-target="#campgroundCarousel"
        data-bs-slide="prev"
      >
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button
        class="carousel-control-next"
        type="button"
        data-bs-target="#campgroundCarousel"
        data-bs-slide="next"
      >
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
      <% } %>
    </div>
    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title"><%= campground.title %></h5>
        <p class="card-text"><%= campground.description %></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item text-muted"><%= campground.location %></li>
        <li class="list-group-item">
          Submitted by: <%= campground.author.username%>
        </li>
        <li class="list-group-item">$<%= campground.price %>/per night</li>
      </ul>
      <!-- Due to the if condition below we will be able to hide the edit and delete button if someone doesn't own the campground but you can still send put or delete request through postman or you can just add /edit to the URL so we need to protect that too. -->
      <% if (currUser && campground.author.equals(currUser._id)) { %>
      <!-- Mongoose uses the mongodb-native driver, which uses the custom ObjectID type. You can compare ObjectIDs with the .equals() method. The ObjectID type also has a toString() method which gets called (I am not 100% sure although), if you wish to store a stringified version of the ObjectID in JSON format, or a cookie.ObjectIDs are objects so if you just compare them with == you're comparing their references, so it won't work.However, converting object id to string String() might do the job.(So, .equals() only available for mongoose ObjectId types). So, == & === won't work here. -->
      <div class="card-body">
        <a
          href="/campgrounds/<%= campground._id %>/edit"
          class="card-link btn btn-info text-white"
          >Edit</a
        >
        <form
          action="/campgrounds/<%= campground._id %>?_method=DELETE"
          method="POST"
          class="d-inline"
        >
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
      <% } %>
      <div class="card-footer text-muted">3 days ago</div>
    </div>
  </div>
  <div class="col-12 col-md-6 mt-3 mt-md-0">
    <div id="map"></div>
    <% if (currUser) { %>
    <!-- If you're not signed in you should not see the leave a review form -->
    <h4 class="my-3">Leave a Review</h4>
    <form <% if (foundReview) { %>
      action="/campgrounds/<%= campground._id %>/reviews/<%= foundReview._id
      %>?_method=PUT" <% } else { %> action="/campgrounds/<%= campground._id
      %>/reviews" <% } %> method="POST" class="mb-3 validated-form" novalidate >
      <fieldset class="starability-basic">
        <input
          type="radio"
          id="no-rate"
          class="input-no-rate"
          name="review[rating]"
          value="1"
          checked
          aria-label="No rating."
        />
        <% for( let i = 1; i <= 5; i++ ) { %> <input type="radio"
        id="first-rate<%=i%>" name="review[rating]" value="<%= i %>" <% if
        (foundReview && i === foundReview.rating) { %> <%= checked="checked" %>
        <% } %> />
        <label for="first-rate<%=i%>" title="<%= i %> stars"
          ><%= i %> stars</label
        >
        <% } %>
      </fieldset>
      <!-- <fieldset class="starability-basic">
      <input type="radio" id="first-rate1" name="review[rating]" value="1" />
      <label for="first-rate1" title="Terrible">1 star</label>
      <input type="radio" id="first-rate2" name="review[rating]" value="2" />
      <label for="first-rate2" title="Not good">2 stars</label>
      <input type="radio" id="first-rate3" name="review[rating]" value="3" />
      <label for="first-rate3" title="Average">3 stars</label>
      <input type="radio" id="first-rate4" name="review[rating]" value="4" />
      <label for="first-rate4" title="Very good">4 stars</label>
      <input type="radio" id="first-rate5" name="review[rating]" value="5" />
      <label for="first-rate5" title="Amazing">5 stars</label>
    </fieldset> -->
      <div class="mb-3">
        <label for="body" class="form-label">Review</label>
        <textarea
          name="review[body]"
          id="body"
          cols="30"
          rows="3"
          class="form-control"
          placeholder="Add a review here..."
          required
        >
<% if (foundReview) { %><%= foundReview.body %><% } %>
</textarea
        >
        <div class="valid-feedback">Looks good!</div>
        <div class="invalid-feedback">Review required!</div>
      </div>
      <% if (foundReview) { %>
      <button class="btn btn-info text-white">Edit</button>
      <% } else { %>
      <button class="btn btn-success">Submit</button>
      <% } %>
    </form>
    <% } %> 
    <h4 class="my-3">Reviews</h4>
    <% for (let review of campground.reviews) { %>
    <div class="card mb-3">
      <div class="card-body">
        <h6 class="card-title"><%= review.author.username %></h6>
        <!-- data-rating down below is for filling in the rating number in the reviews shown on the show page and before the end of the paragraph where i've written review.rating stars that's only for screen readers/accessability purposes. -->
        <p class="starability-result" data-rating="<%= review.rating %>">
          <%=review.rating%> stars
        </p>
        <p class="card-text">Review: <%= review.body %></p>
        <% if (currUser && review.author.equals(currUser._id)) { %>
        <!-- Even though I have populated the author this equals thing still works ?  -->
        <!-- I thought it would work only when it wasn't populated -->
        <form
          action="/campgrounds/<%= campground._id %>/reviews/<%= review._id %>/edit"
          class="d-inline"
        >
          <button class="btn btn-sm btn-info text-white">Edit</button>
        </form>
        <form
          action="/campgrounds/<%= campground._id %>/reviews/<%= review._id %>?_method=DELETE"
          method="POST"
          class="d-inline"
        >
          <button class="btn btn-sm btn-danger">Delete</button>
        </form>
        <% } %>
      </div>
    </div>
    <% } %>
  </div>
</div>

<!-- Sending data from server side to the client side. (Other way can be using axios I can make request to get the things that I want to get like coordinates etc. along with setting appropriate get requests on the backend side and them making the axios request from showPageMap.js file.) -->
<script>
  // We're doing this so my script showPageMap can access the mapboxToken.
  const mapboxToken = '<%-process.env.MAPBOX_TOKEN%>';
  const campground = <%- JSON.stringify(campground) %>
</script>

<script src="/javascriptFiles/showPageMap.js"></script>
<!-- Putting in .js in this line above is extremely extremely important -->
